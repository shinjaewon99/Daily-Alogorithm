/*
문제
여행가 A는 NxN 크기의 정사각형 공간 위에 서 있다. 이 공간은 1x1 크기의 정사각형으로 나누어져 있다. 가장 왼쪽 위 좌표는 (1,1)이며, 가장 오른쪽 아래 좌표는 (N,N)에 해당한다. 여행가 A는 상,하,좌,우 방향으로 이동할 수 있으며, 시작 좌표는 항상 (1,1)이다. 우리 앞에는 여행가 A가 이동할 계획이 적힌 계획서가 놓여 있다.

계획서에는 하나의 줄에 띄어쓰기를 기준으로 하여 L,R,U,D 중 하나의 문자가 반복적으로 적혀있다. 각 문자의 의미는 다음과 같다.

L : 왼쪽으로 한 칸 이동
R : 오른쪽으로 한 칸 이동
U : 위로 한 칸 이동
D : 아래로 한 칸 이동

이때 여행가 A가 NxN 크기의 정사각형 공간을 벗어나는 움직임은 무시된다. 예를 들어 (1,1)의 위치에서 L 혹은 U를 만나면 무시된다. 다음은 N=5인 지도와 계획서이다.

계획서 : R -> R -> R -> U -> D -> D

이 경우 6개의 명령에 따라서 여행가가 움직이게 되는 위치는 순서대로 (1,2), (1,3), (1,4), (1,4), (2,4), (3,4) 이므로, 최종적으로 여행가 A가 도착하게 되는 곳의 좌표는 (3,4)이다. 다시 말해 3행 4열의 위치에 해당하므로 (3,4)라고 적는다. 계획서가 주어졌을 때 여행가 A가 최종적으로 도착할 지점의 좌표를 출력하는 프로그램을 작성하시오.

(입력 조건)

첫째 줄에 공간의 크기를 나타내는 N이 주어진다. (1<=N<=100)
둘째 줄에 여행가 A가 이동할 계획서 내용이 주어진다. (1<=이동 횟수<=100)
(출력 조건)

첫째 줄에 여행가 A가 최종적으로 도착할 지점의 좌표 (X,Y)를 공백으로 구분하여 출력한다.
입력 예시
5
R R R U D D

출력 예시
3 4
*/

import java.util.Scanner;

public class problem129 {

    public static void main(String[] args) {

        Scanner in = new Scanner(System.in);

        int number = in.nextInt();
        in.nextLine(); // 버퍼 비우기 : 정수형 입력후 String 입력할시 버퍼를 비워줘야된다.

        String[] stArr = in.nextLine().split(" ");

        // 상 하 좌 우 (복 남 서 동)
        int[][] intArr = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};
        char[] dir = {'U', 'D', 'L', 'R'};

        // 문제에서 (1,1)이 시작 위치이다.
        int x = 1;
        int y = 1;
        for(int i = 0; i < stArr.length; i++){
            for(int j = 0; j < dir.length; j++){
                if(stArr[i].charAt(0) == dir[j]){
                    int dx = x + intArr[j][0];
                    int dy = y + intArr[j][1];

                    // 범위가 벗어난 위치는 무시
                    if(dx <= 0 || dx > number || dy <=0 || dy > number) continue;
                    // 이동한 위치 저장
                    x = dx;
                    y = dy;
                }


            }
        }
        System.out.print(x + " " + y);


    }
}
