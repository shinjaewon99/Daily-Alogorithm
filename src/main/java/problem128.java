/*
문제
한 마을에 모험가가 N명 있습니다. 모험가 길드에서는 N명의 모험가를 대상으로 '공포도'를 측정했는데,
'공포도'가 높은 모험가는 쉽게 공포도를 느껴 위험 상황에서 제대로 대처할 능력이 떨어집니다.
모험가 길드장인 동빈이는 모험가 그룹을 안전하게 구성하고자 공포도가 X인 모험가는 반드시 X명 이상으로 구성한
모험가 그룹에 참여해야 여행을 떠날 수 있도록 규정했습니다. 동빈이는 최대 몇 개의 모험가 그룹을 만들 수 있는지 궁금합니다.

동빈이를 위해 N명의 모험가에 대한 정보가 주어졌을 때, 여행을 떠날 수 있는 그룹 수의 최댓값을 구하는 프로그램을 작성하세요.

예를 들어 N=5이고, 각 모험가의 공포도가 다음과 같다고 가정합시다.

2 3 1 2 2

이 때, 그룹 1에 공포도가 1, 2, 3인 모험가를 한 명씩 넣고, 그룹2에 공포도가 2인 남은 두 명을 넣게 되면,
총 2개의 그룹을 만들 수 있습니다.
또한 몇 명의 모험가는 마을에 그대로 남아 있어도 되기 때문에,
모든 모험가를 특정한 그룹에 넣을 필요는 없습니다.
*/
import java.util.*;

public class problem128 {

    public static void main(String[] args) {

        Scanner in = new Scanner(System.in);

        int main = in.nextInt();

        int[] arr = new int[main];

        for (int i = 0; i < main; i++) {
            arr[i] = in.nextInt();
        }
        Arrays.sort(arr);
        int count = 0;
        int total = 0;
        /**
         * 1 2 2 2 3 이 입력되었을경우
         공포도가 1인 사람은 1명이상에서 그룹을 지어 갈수있다. 2인 사람은 2명이상
         여행을 떠날수있는 그룹수의 최대값을 구하면된다.
         **/
        for (int i = 0; i < arr.length; i++) {
            count++;
            // 공포도의 오름차순에따라 비교한다.
            if (count >= arr[i]) {
                total++;
                count = 0;
            }
        }
        System.out.print(total);
    }
}

